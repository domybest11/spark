package org.apache.spark.status

import java.util.Date

import org.apache.spark.status.api.v1._


case class ApplicationMetricData private[spark](id: String,
                                                appId: String,
                                                appName: String,
                                                startTime: Date,
                                                endTime: Date,
                                                complete: Boolean = false)


class JobMetricData private[spark](val id: String,
                                   val appId: String,
                                   val jobId: Int,
                                   val group: String,
                                   val describe: String,
                                   val startTime: Date,
                                   val endTime: Date,
                                   val complete: Boolean = false,
                                   val status: String,
                                   val stageIds: Seq[Int],
                                   val numTasks: Int,
                                   val numActiveTasks: Int,
                                   val numCompletedTasks: Int,
                                   val numSkippedTasks: Int,
                                   val numFailedTasks: Int,
                                   val numKilledTasks: Int,
                                   val numCompletedIndices: Int,
                                   val numActiveStages: Int,
                                   val numCompletedStages: Int,
                                   val numSkippedStages: Int,
                                   val numFailedStages: Int,
                                   val killedTasksSummary: Map[String, Int])

class StageMetricData private[spark](
                                val id: String,
                                val appId: String,
                                var jobIds: Set[Int],
                                val status: StageStatus,
                                val stageId: Int,
                                val attemptId: Int,
                                val numTasks: Int,
                                val numActiveTasks: Int,
                                val numCompleteTasks: Int,
                                val numFailedTasks: Int,
                                val numKilledTasks: Int,
                                val numCompletedIndices: Int,

                                val executorRunTime: Long,
                                val executorCpuTime: Long,
                                val submissionTime: Option[Date],
                                val firstTaskLaunchedTime: Option[Date],
                                val completionTime: Option[Date],
                                val failureReason: Option[String],

                                val inputBytes: Long,
                                val inputRecords: Long,
                                val outputBytes: Long,
                                val outputRecords: Long,
                                val shuffleReadBytes: Long,
                                val shuffleReadRecords: Long,
                                val shuffleWriteBytes: Long,
                                val shuffleWriteRecords: Long,
                                val memoryBytesSpilled: Long,
                                val diskBytesSpilled: Long,

                                val name: String,
                                val description: Option[String],
                                val details: String,
                                val schedulingPool: String,

                                val rddIds: Seq[Int],
                                val accumulatorUpdates: Seq[AccumulableInfo],
                                val tasks: Option[Map[Long, TaskData]],
                                val executorSummary: Option[Map[String, ExecutorStageSummary]],
                                val killedTasksSummary: Map[String, Int])

class TaskMetricData private[spark](
                                     val id: String,
                                     val appId: String,
                                     var jobIds: Set[Int],
                                     val stageId: Int,
                                     val taskId: Long,
                                     val index: Int,
                                     val attempt: Int,
                                     val startTime: Date,
                                     val endTime: Date,
                                     //                                     val resultFetchStart: Option[Date],
                                     val duration: Long,
                                     val executorId: String,
                                     val host: String,
                                     val status: String,
                                     val taskLocality: String,
                                     val speculative: Boolean,
                                     val accumulatorUpdates: Seq[AccumulableInfo],
                                     val errorMessage: Option[String] = None,
                                     val taskMetrics: Option[TaskMetrics] = None)

class ExecutorMetricSummary private[spark](
                                      val id: String,
                                      val appId: String,
                                      val executorId: String,
                                      val hostPort: String,
                                      val isActive: Boolean,
                                      val rddBlocks: Int,
                                      val memoryUsed: Long,
                                      val diskUsed: Long,
                                      val totalCores: Int,
                                      val maxTasks: Int,
                                      val activeTasks: Int,
                                      val failedTasks: Int,
                                      val completedTasks: Int,
                                      val totalTasks: Int,
                                      val totalDuration: Long,
                                      val totalGCTime: Long,
                                      val totalInputBytes: Long,
                                      val totalShuffleRead: Long,
                                      val totalShuffleWrite: Long,
                                      val isBlacklisted: Boolean,
                                      val maxMemory: Long,
                                      val addTime: Date,
                                      val removeTime: Option[Date],
                                      val removeReason: Option[String],
                                      val executorLogs: Map[String, String],
                                      val memoryMetrics: Option[MemoryMetrics],
                                      val blacklistedInStages: Set[Int])

